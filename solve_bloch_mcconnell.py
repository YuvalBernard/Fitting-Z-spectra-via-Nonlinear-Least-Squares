import jax.numpy as jnp
def Z_analytical_symbolic(R1a, R2a, dwa, R1b, R2b, k, f, dwb, offset, power, B0, gamma, tp):
    x0 = offset**2
    x1 = power**2
    x2 = R2b + k
    x3 = -x2
    x4 = k**2
    x5 = f*x4
    x6 = x3*x5
    x7 = f*k
    x8 = R2a + x7
    x9 = -x8
    x10 = -offset
    x11 = dwa + x10
    x12 = -x11
    x13 = gamma**2
    x14 = B0**2
    x15 = x13*x14
    x16 = x11*x12*x15
    x17 = -x16*x9 - x6
    x18 = -x5
    x19 = 2*R2b
    x20 = R1b + 3*k + x19
    x21 = R1b + k
    x22 = 2*k
    x23 = R1b + R2b + x22
    x24 = x1*x13
    x25 = dwb + x10
    x26 = -x25
    x27 = x15*x25*x26
    x28 = -x27
    x29 = x24 + x28
    x30 = x2*x21 + x2*x23 + x29
    x31 = x20 + x8
    x32 = x3**2*x7
    x33 = B0*gamma
    x34 = x12*x33
    x35 = x34*x7
    x36 = x26*x33
    x37 = x36*x7
    x38 = x35 + x37
    x39 = x25*x33
    x40 = x38*x39
    x41 = x32 + x40
    x42 = k*x41
    x43 = k*x38
    x44 = x34*x9**2 + x43
    x45 = x11*x33
    x46 = x3*x7
    x47 = x34*x9
    x48 = x3*x38 + x36*x46 + x47*x7
    x49 = x3*x41 + x39*x48
    x50 = k*x49
    x51 = k*x48
    x52 = -x16 - x5
    x53 = -x6
    x54 = x20*x5
    x55 = -x54
    x56 = x2**2
    x57 = -x21
    x58 = x27*x3
    x59 = -x1*x13
    x60 = -x27 - x59
    x61 = x21*x56 + x23*x60 + x24*x57 - x58
    x62 = x24*x7
    x63 = -x62
    x64 = x27*x7
    x65 = x32 + x64
    x66 = R1a + x7
    x67 = x20*x66
    x68 = x20 + x66
    x69 = x19 + x22
    x70 = x21*x69 + x56
    x71 = 2*x5
    x72 = 2*x24
    x73 = -x71 + x72
    x74 = B0*x12
    x75 = gamma**3
    x76 = x1*x75
    x77 = x74*x76
    x78 = -x77
    x79 = x44 + x78
    x80 = x29 + x70
    x81 = x18 + x67 + x80
    x82 = -x5 - x59
    x83 = -x66
    x84 = x5*x57
    x85 = x21*(-x27 + x56) + x24*x3 + x24*x69
    x86 = x55 + x66*x80 - x84 + x85
    x87 = 2*x7
    x88 = R1a + R2a + x87
    x89 = x20 + x88
    x90 = power*x13
    x91 = x74*x90
    x92 = -x83*x91 - x9*x91
    x93 = gamma*power
    x94 = x51 + x79*x9 + x92*x93
    x95 = -x38*x93 - x7*x91
    x96 = x93*x95
    x97 = x3*x48 + x36*x41 + x7*x79 + x96
    x98 = x1*x13*x83 - x6
    x99 = x71*x93
    x100 = -x83**2*x93 - x99
    x101 = x24*x87
    x102 = -x101
    x103 = x102 + x65
    x104 = k*x103 + x100*x93
    x105 = k*(f*k*x57**2 - x62) + x20*x84 + x5*x80 - x66*x85
    x106 = k*x95
    x107 = x7*x93
    x108 = x87*x93
    x109 = -x107*x83 - x108*x57 - x46*x93
    x110 = (-k*(x3*x49 + x39*x97) + x17*(x24*x83 + x53 + x68*x82 + x8*x81 + x86) - x45*(k*x97 + x9*x94 + x93*(x106 - x79*x93 + x83*x92)) + x52*(-x104 - x105 + x68*x98 + x8*x86 + x81*x82) + x8*(-k*(x103*x3 + x109*x93 + x58*x87) - x104*x68 - x105*x8 + x81*x98 + x82*x86 - x93*(k*x109 + x100*x83)) + x89*(-x45*x94 - x50) + (-x42 - x45*x79)*(x28 + x67 + x68*x8 + x70 + x73))**(-1.0)
    x111 = B0*x25*x90
    x112 = -k*x36 + x111
    x113 = k*x3
    x114 = x113*x93
    x115 = k*x27 + x113*x2
    x116 = x39 + x93
    x117 = -x116
    x118 = x47 + x5
    x119 = x118*x9 + x39*x5
    x120 = x35 + x46
    x121 = R1a*x110*(B0*gamma*x11*(x44*x9 + x51) - x17*(x18 + x20*x8 + x30) - x31*(-x42 - x44*x45) + x50 - x52*(x30*x8 + x53 + x55 + x61) - x8*(-k*(x63 + x65) - x3*x54 - x30*x5 + x61*x8)) + R1b*f*x110*(-k*(k*(-power*x12*x14*x26*x75 + x118*x7 + x120*x93 + x39*x46) - x119*x93) - x16*(x112*x8 + x114 + x115) - x45*(k*(x15*x25**2*x7 - x3*x91) + x119*x9) + x8*(-k*(-x111*x3 - x53) + x114*x117 + x115*x8) + (x112 + x117*x8)*(k*x91 - x118*x45) + (-k*(k*x120 - x118*x93) - x119*x45)*(R2a - x116 + x7))
    x122 = R2a**2
    x123 = R2b**2
    x124 = x122*x123
    x125 = R1a*x124
    x126 = R1b*x125
    x127 = gamma**4
    x128 = power**4*x127
    x129 = R2a*x128
    x130 = R2b*x129
    x131 = R1a*R1b
    x132 = B0**4
    x133 = x127*x132
    x134 = offset**4*x133
    x135 = x131*x134
    x136 = x122*x24
    x137 = R1a*x136
    x138 = R2b*x137
    x139 = x123*x24
    x140 = R1b*x139
    x141 = R2a*x140
    x142 = offset**3
    x143 = dwa*x0*x133
    x144 = dwb*x131*x143
    x145 = dwb**2
    x146 = dwa**2
    x147 = x122*x131
    x148 = 6*x15
    x149 = x147*x148
    x150 = x123*x131
    x151 = x148*x150
    x152 = x1*x127*x14
    x153 = x146*x152
    x154 = R1a*x153
    x155 = 6*R2b
    x156 = x0*x152
    x157 = R1a*x156
    x158 = x145*x152
    x159 = R1b*x158
    x160 = 6*R2a
    x161 = R1b*x156
    x162 = x133*x146
    x163 = x145*x162
    x164 = 6*x131
    x165 = x0*x162
    x166 = x133*x145
    x167 = x0*x166
    x168 = 2*R2a
    x169 = R1a*R2a
    x170 = R1b*x24
    x171 = R2a*x170
    x172 = 2*dwa
    x173 = x133*x142
    x174 = x172*x173
    x175 = 2*dwb
    x176 = x173*x175
    x177 = 4*R2a
    x178 = x131*x177
    x179 = offset*x15
    x180 = dwb*x179
    x181 = x131*x15
    x182 = 4*R2b*dwa*offset
    x183 = x122*x15
    x184 = x145*x183
    x185 = x0*x183
    x186 = R1a*x123
    x187 = x15*x186
    x188 = R1b*x123
    x189 = x15*x188
    x190 = x145*x181
    x191 = x0*x181
    x192 = x146*x181
    x193 = offset*x175
    x194 = x183*x193
    x195 = offset*x172
    x196 = x152*x195
    x197 = x152*x193
    x198 = offset*x152
    x199 = dwb*x198
    x200 = dwa*x198
    x201 = 4*dwb
    x202 = x143*x201
    x203 = x166*x195
    x204 = x162*x193
    x205 = R1a*x134 + R1a*x163 + R1a*x165 + R1a*x167 - R1a*x174 - R1a*x176 + R1a*x184 + R1a*x185 - R1a*x194 - R1a*x196 + R1a*x202 - R1a*x203 - R1a*x204 + R1b*x124 + R1b*x134 + R1b*x163 + R1b*x165 + R1b*x167 - R1b*x174 - R1b*x176 + R1b*x184 + R1b*x185 - R1b*x194 - R1b*x197 + R1b*x202 - R1b*x203 - R1b*x204 + R2a*x139 + R2a*x156 + R2a*x158 + R2b*x128 + R2b*x136 + R2b*x153 + R2b*x156 + x0*x187 + x0*x189 + x125 + x129 + x137 + x140 + x146*x187 + x146*x189 + x147*x19 + x150*x168 + x154 + x157 + x159 + x161 + x168*x190 + x168*x191 - x168*x199 + x169*x19*x24 + x171*x19 - x178*x180 - x181*x182 - x187*x195 - x189*x195 + x19*x191 + x19*x192 - x19*x200
    x206 = x131*x173
    x207 = 120*dwa
    x208 = dwb*offset
    x209 = 60*x15
    x210 = x147*x209
    x211 = x150*x209
    x212 = 60*R2b
    x213 = 60*R2a
    x214 = 60*x131
    x215 = x122*x19
    x216 = R2b*x24
    x217 = R1a*x15
    x218 = R1b*x15
    x219 = x123*x15
    x220 = x168*x217
    x221 = x19*x217
    x222 = x168*x218
    x223 = x19*x218
    x224 = (12*R1a*R1b*dwa*offset*x123*x13*x14 + 12*R1a*R1b*dwa*offset*x127*x132*x145 + 12*R1a*R1b*dwa*x127*x132*x142 + 12*R1a*R1b*dwb*offset*x122*x13*x14 + 12*R1a*R1b*dwb*offset*x127*x132*x146 + 12*R1a*R1b*dwb*x127*x132*x142 + 12*R1a*R2b*dwa*offset*x1*x127*x14 + 12*R1b*R2a*dwb*offset*x1*x127*x14 - x0*x149 - x0*x151 - 6*x126 - 6*x130 - 6*x135 - 6*x138 - 6*x141 - 24*x144 - x145*x149 - x146*x151 - x154*x155 - x155*x157 - x159*x160 - x160*x161 - x163*x164 - x164*x165 - x164*x167)/(x205 + jnp.sqrt(25*x205**2 - (-120*R1a*R2b*x200 - 120*R1b*R2a*x199 - 120*dwb*x206 - offset*x131*x166*x207 + x0*x210 + x0*x211 + 60*x126 + 60*x130 - 120*x131*x162*x208 + 60*x135 + 60*x138 + 60*x141 + 240*x144 + x145*x210 + x146*x211 - 120*x147*x180 - x150*x179*x207 + x154*x212 + x157*x212 + x159*x213 + x161*x213 + x163*x214 + x165*x214 + x167*x214 - x206*x207)*(R1a*x215 + R1a*x216 + R1b*x215 + R2b*x178 + x0*x219 + x0*x220 + x0*x221 + x0*x222 + x0*x223 + x124 + x128 + x134 + x136 + x139 + x145*x220 + x145*x222 + x146*x219 + x146*x221 + x146*x223 + x147 + x150 + x153 + 2*x156 + x158 + x163 + x165 + x167 + x168*x186 + x168*x188 - x169*x179*x201 + x169*x72 + x170*x19 + x171 - x174 - x176 - x177*x208*x218 + x177*x216 - x181*x193 - x181*x195 - x182*x217 - x182*x218 + x184 + x185 + x190 + 2*x191 + x192 - x194 - x195*x219 - x196 - x197 + x202 - x203 - x204)))
    x225 = x2 + x224
    x226 = -x225
    x227 = x226**2
    x228 = x227*x7
    x229 = x228 + x40
    x230 = k*x229
    x231 = x224 + x8
    x232 = -x231
    x233 = x232**2
    x234 = x233*x34
    x235 = x234 + x43
    x236 = x235 + x78
    x237 = -x230 - x236*x45
    x238 = x224 + x66
    x239 = 3*x224
    x240 = x20 + x239
    x241 = x238*x240
    x242 = 4*x224
    x243 = x242 + x68
    x244 = x21 + x224
    x245 = 2*x224
    x246 = x245 + x69
    x247 = x225**2
    x248 = x247 + x28
    x249 = x244*x246 + x248
    x250 = x232*x35
    x251 = x226*x37 + x226*x38 + x250
    x252 = x226*x229 + x251*x39
    x253 = x226*x251 + x229*x36 + x236*x7 + x96
    x254 = -x238
    x255 = -x232*x91 - x254*x91
    x256 = x255*x93
    x257 = k*x251
    x258 = x232*x236 + x256 + x257
    x259 = x258*x45
    x260 = x226*x5
    x261 = -x16*x232 - x260
    x262 = x24 + x249
    x263 = x18 + x241 + x262
    x264 = x24*x254
    x265 = -x260
    x266 = x264 + x265
    x267 = -x244
    x268 = x267*x5
    x269 = -x268
    x270 = x240*x5
    x271 = -x270
    x272 = x247 - x27
    x273 = x226*x24 + x24*x246 + x244*x272
    x274 = x238*x262 + x269 + x271 + x273
    x275 = x1*x13*x254 - x260
    x276 = x254**2
    x277 = x276*x93
    x278 = -x277 - x99
    x279 = x278*x93
    x280 = x228 + x64
    x281 = x102 + x280
    x282 = k*x281 + x279
    x283 = k*(f*k*x267**2 - x62) - x238*x273 + x240*x268 + x262*x5
    x284 = -x107*x226 - x107*x254 - x108*x267
    x285 = x226*x27
    x286 = x285*x87
    x287 = -k*(x226*x281 + x284*x93 + x286) - x231*x283 - x243*x282 + x263*x275 + x274*x82 - x93*(k*x284 + x254*x278)
    x288 = x238*x272
    x289 = x239 + x66
    x290 = x289 + x69
    x291 = x238*x246 + x248
    x292 = x225*x244
    x293 = x23 + x245
    x294 = x238*x293
    x295 = x18 + x294
    x296 = x292 + x295
    x297 = x23 + x289
    x298 = x293*x5
    x299 = x269 - x298
    x300 = x24 + x292
    x301 = x225*x293 + x28 + x300
    x302 = x24*x267
    x303 = -x285
    x304 = x244*x247 + x293*x60 + x302 + x303
    x305 = x242 + x88
    x306 = x23 + x305
    x307 = B0*gamma*x12*x233 - x77
    x308 = x231*x297
    x309 = x295 + x300
    x310 = x18 + x24
    x311 = x268 + x298
    x312 = x21 + x245 + x66
    x313 = x225*x312 + x238*x244
    x314 = x310 + x313
    x315 = x225*(x238*x244 - x5) + x24*x312 + x302
    x316 = x234 + x34*x5 + x78
    return -x121 + (x0/(x0 + x1) + x121)*jnp.exp(tp*(x224 + (-k*(x226*x252 + x253*x39) + x231*x287 + x237*(x231*x243 + x241 + x249 + x73) + x261*(x231*x263 + x243*x82 + x266 + x274) - x45*(k*x253 + x232*x258 + x93*(x106 - x236*x93 + x254*x255)) + x52*(x231*x274 + x243*x275 + x263*x82 - x282 - x283) + (5*x224 + x89)*(-k*x252 - x259))/(B0*gamma*x11*x306*x316 + B0*gamma*x11*(x232*x235 + x257) + B0*gamma*x11*(x232*x307 + x256) + B0*gamma*x11*(k*(x226*x35 + x250) + x232*x316 + x256) + f*x226**3*x4 + f*x226*x4*(x18 + x225*x297 + x29 + x313) + f*x4*(x225*x314 - x27*x297 + x303 + x315) + k*x243*x280 + 2*k*x252 + k*(x226*x280 + x286) + x11*x12*x13*x14*x232*(x292 + x294 + x308 + x73) + x11*x12*x13*x14*(x231*x309 + x238*x300 + x266 + x297*x82 + x299) - x231*(-k*(x280 + x63) - x226*x270 + x231*x304 - x301*x5) - x231*(x225*x315 - x27*x314 - x285*x297 - x39*(B0*gamma*x227*x26 - B0*x26*x76)) - x231*(x231*(x225*x238*x244 - x311) + x24*x296 + x264*x297 - x93*(-x277 - x5*x93)) - x231*(-k*x280 + x231*x288 + x24*x276 + x275*x290 + x291*x82) - x231*(-k*(f*k*x227 - x101) + x231*(x238*x300 - x311) + x275*x297 - x279 + x309*x82) - x237*(x305 + x69) + x259 - x261*(x308 + x309) - x261*(x18 + x231*x240 + x301) - x261*(x231*x290 + x291 + x310) - x287 - x306*(-x227*x5 - x307*x45) - x52*(x231*x291 + x266 + x288 + x290*x82) - x52*(x231*x301 + x265 + x271 + x304) - x52*(x231*x296 + x238*x292 + x24*x297 + x264 + x299) - (-x230 - x235*x45)*(x242 + x31))))
